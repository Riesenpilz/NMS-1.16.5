package io.github.riesenpilz.nms.packet.loginOut;

import org.bukkit.entity.Player;

import io.github.riesenpilz.nms.reflections.Field;
import net.minecraft.server.v1_16_R3.Packet;
import net.minecraft.server.v1_16_R3.PacketLoginOutEncryptionBegin;
import net.minecraft.server.v1_16_R3.PacketLoginOutListener;

/**
 * https://wiki.vg/Protocol#Encryption_Request<br>
 * <br>
 * See Protocol Encryption for details.<br>
 * <br>
 * Packet ID: 0x01<br>
 * State: Login<br>
 * Bound To: Client
 * 
 * @author Martin
 *
 */
public class PacketLoginOutEncryptionRequestEvent extends PacketLoginOutEvent {

	public static final String PROTOCOL_URL = "https://wiki.vg/Protocol#Encryption_Request";
	public static final int PACKET_ID = 1;

	/**
	 * Appears to be empty. (20 chars)
	 */
	private String serverID;

	/**
	 * The server's public key in bytes.
	 */
	private byte[] publicKey;

	/**
	 * A sequence of random bytes generated by the server.
	 */
	private byte[] verifyToken;

	public PacketLoginOutEncryptionRequestEvent(Player injectedPlayer, String serverID, byte[] publicKey,
			byte[] verifyToken) {
		super(injectedPlayer, PACKET_ID, PROTOCOL_URL);
		this.serverID = serverID;
		this.publicKey = publicKey;
		this.verifyToken = verifyToken;
	}

	public PacketLoginOutEncryptionRequestEvent(Player injectedPlayer, PacketLoginOutEncryptionBegin packet) {
		super(injectedPlayer, PACKET_ID, PROTOCOL_URL);
		serverID = (String) new Field(PacketLoginOutEncryptionBegin.class, "a").get(packet);
		publicKey = (byte[]) new Field(PacketLoginOutEncryptionBegin.class, "b").get(packet);
		verifyToken = (byte[]) new Field(PacketLoginOutEncryptionBegin.class, "c").get(packet);
	}

	public String getServerID() {
		return serverID;
	}

	public byte[] getPublicKey() {
		return publicKey;
	}

	public byte[] getVerifyToken() {
		return verifyToken;
	}

	@Override
	public Packet<PacketLoginOutListener> getNMS() {
		return new PacketLoginOutEncryptionBegin(serverID, publicKey, verifyToken);
	}

}
